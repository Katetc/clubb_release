$Id$

INPUT_MISC/TUNER DIRECTORY OVERVIEW
====================================

The error_<CASE NAME>.in files contain the following namelists:

--------------------------------------------------------------------------------
1. &stats:
--------------------------------------------------------------------------------

  Name        | Data type  
------------------------------------------
f_tol	| real, default precision 
 This is the degree of accuracy in "tuning" (i.e. the # of digits).
 Decreasing f_tol results in a tighter criterion of convergence.
 It only applies to the Numerical Recipes subroutines.

l_results_stdout  | logical
 Will print all results of tuning to the terminal if true
 l_results_file will generate a new error.in based on the new constants if true

l_results_file  | logical
 Will output results to a text file.

l_stdout_on_invalid  | logical
 Will write a series of namelists for analyzing what parameter sets cause the 
 model to crash.

anneal_iter | integer
 The variable anneal_iter are only used in amebsa runs.  It determines the 
 number of times the subroutine is called.

anneal_temp | real, default precision
 Used for both amebsa and the enhanced simulated annealing algorithm.  
 It determines the starting temperature for the algorithms.

tune_type | integer
   0 for amoeba(downhill simplex method with random restart), or
   1 for amebsa(downhill simplex with simulated annealing), or
   2 for Siarry et al., 1997 enhanced simulated annealing.

t_variables | character array
 Setting t_variables:
 Most variables are named in the same fashion in both CLUBB and the LES, but
   because some are not they must be specified as an ordered pair of strings.

 Known values of the CLUBB variables and LES variables are listed in the 
 following table:

                 Variables
   CLUBB      | COAMPS-LES | SAM
   ------------------------------------
   cloud_frac | cf         | CLD
   rcm        | qcm        | QC * 1e-3
   wp3        | wp3        | W3
   thlm       | thlm       | THETAL (without ice)
   T_in_K     |            ! TABS
   rtm        | qtm        | QT * 1e-3
   um         | um         | U
   vm         | vm         | V
   wp2_zt     | wp2        | W2
   up2_zt     | up2        | U2
   vp2_zt     | vp2        | V2


  Values of t_variables for other variables can be found in the .ctl or .nc 
  files.

  Key variables for UWM: qcm/rcm, cloud_frac, rtm/qtm, thlm, um, vm, wp3

weight_var_nl  | real array
 The weight applied to each variable in the cost function

--------------------------------------------------------------------------------
2. &cases:
--------------------------------------------------------------------------------

  Name        | Data type  
------------------------------------------
hoc_stats_file_nl | character array
 Specifies the name of the CLUBB GrADS files we're reading from.

les_stats_file_nl | character array
 Specifies the name of the LES GrADS files we're reading from.

run_file_nl | character array
 Specifies the filename of file holding the &model_settings, etc. namelists. This file is created as the tuner runs, and should not be present beforehand.

z_i_nl | integer array
 Specifies the lowest altitude levels to average over, based on where those altitudes
 reside on the CLUBB grid.  The LES variable will be iterpolated to the CLUBB grid
 to compute the difference between the two.

z_f_nl | integer array
 Specifies the highest altitude levels to average over, based on where those altitudes
 reside on the CLUBB grid.  The LES variable will be iterpolated to the CLUBB grid
 to compute the difference between the two.

time_nl | integer array
 Specifies the time periods to average over in ordered pairs.

weight_case_nl | real array, default precision
 Specifies how much weight to give a case in the cost function.

--------------------------------------------------------------------------------
2. &initspread:
--------------------------------------------------------------------------------

  Name        | Data type  
------------------------------------------

C1, etc. | real, default precision
 These specify the amount to change the corresponding tunable parameters by.
 In the case of amoeba and amebsa the formula is 
 Parameter * ( (1 - spread) + rannum * spread * 2 )
 thus a spread of 0 will keep a constant static through the run.

In the Siarry, et al. case this is the value of ROSTEP.  Where the initial step vector is defined by the equation:
STPINI(k) = ( X0MAX(k) - X0MIN(k) ) * ROSTEP(k)

Where k is a particular tunable parameter.  Siarry et al. recommends a value 
of 0.25 for this.
