! $Id: $

&model_setting

! Model Settings

runtype = "cloud_feedback_s12_p2k"   ! Case name.

nzmax =  200       ! Number of vertical levels.  ! For grid_type = 1 (and 3).
!nzmax = 128       ! Number of vertical levels.  ! For grid_type = 2.

grid_type = 1     ! Select grid type:
                  ! 1 ==> evenly-spaced grid levels.
                  ! 2 ==> stretched (unevenly-spaced) grid
                  !       entered on thermodynamic grid levels;
                  !       mom. levels halfway between thermo. levels
                  !       (style of SAM stretched grid).
                  ! 3 ==> stretched (unevenly-spaced) grid
                  !       entered on momentum grid levels;
                  !       thermo. levels halfway between mom. levels
                  !       (style of WRF stretched grid).

! Evenly-spaced grid (grid_type = 1).
! Note:  For this option, both zt_grid_fname and zm_grid_fname must be ''.
deltaz  = 50.0    ! Distance between grid levels on evenly-spaced grid.      [m]
zm_init = 0.0     ! Altitude of lowest momentum level on evenly-spaced grid. [m]

! Stretched grid on thermodynamic levels (grid_type = 2).
! Path (from ../standalone/) and filename of data file that contains
! thermodynamic level altitudes (in meters).
! Note:  For this option, zm_grid_fname must be ''.
!zt_grid_fname = '../input/grid/deep_convection_128lev_27km_zt_grid.grd'
zt_grid_fname = ''

! Stretched grid on momentum levels (grid_type = 3).
! Path (from ../standalone/) and filename to data file that contains
! momentum level altitudes (in meters).
! Note:  For this option, zt_grid_fname must be ''.
zm_grid_fname = ''

day   = 15    ! Day of model start (1 to 31).
month = 7     ! Month of model start (1 to 12).
year  = 2003  ! Year of model start.

rlat = 35.0   ! Latitude (0 to 90 for north lat.; 0 to -90 for south lat.) [degrees]
rlon = -125.0 ! Longitude (0 to 180 for east long.; 0 to -180 for west long.) [degrees]

time_initial = 0.0       ! Model start time [seconds since midnight on start date]
time_final   = 2592000.0 ! Model end time [seconds since midnight on start date]
time_spinup  = 100000.0  ! End of spin-up period [seconds since midnight on start date]

!dtmain    = 300.0   ! Model timestep [s]
!dtclosure = 300.0   ! Closure timestep [s] (must multiply evenly into dtmain).
dtmain    = 600.0   ! Model timestep [s]
dtclosure = 600.0   ! Closure timestep [s] (must multiply evenly into dtmain).

sfctype = 1      ! Select surface scheme (cases without specified surface fluxes).
                 ! 0 ==> fixed surface sensible and latent heat fluxes,
                 !       as defined by SE and LE, respectively.
                 ! 1 ==> determine surface sensible and latent heat fluxes
                 !       through a bulk formula that uses the given surface
                 !       temperature (Tsfc) and assumes over ocean.

Tsfc = 292.96       ! Temperature at model base              [K]
psfc = 101864.6     ! Pressure at model base              [Pa]

fcor = 0.376e-4     ! Coriolis parameter                  [s^-1]
T0   = 300.         ! Reference temperature (usually 300) [K]

ts_nudge = 7200.    ! Timescale of u/v nudging            [s]

forcings_file_path = '../input/case_setups/cloud_feedback_s12_p2k_forcings/'
!forcings_file_path = ''

l_tke_aniso    = .true.   ! Flag for anisotropic tke.
l_uv_nudge     = .true.   ! Flag for horizontal wind speed nudging.

l_restart      = .false.  ! Flag for whether this is a restart run.
! Path (from ../standalone/) and filename of GrADS control files
! (without '_zt.ctl' or '_zm.ctl').
restart_path_case  = "restart/cloud_feedback_s12_p2k"
time_restart  = 0.0      ! Time of model restart.
                         ! [seconds since start time listed in GrADS control file]

! Select debug level:
!        0 => Print no debug messages to the screen
!        1 => Print lightweight debug messages, e.g. print statements
!        2 => Print debug messages that require extra testing,
!                e.g. checks for NaNs and spurious negative values.
debug_level   = 0

! Add scalars that are computed using higher-order closure
! 0 to shut off all scalar computations
! > 0 the specifies the number of columns in <runtype>_sclr_sounding.in 
!	that will be read in and tracked
sclr_dim   = 0  ! Total number of scalars

iisclr_rt  = -1  ! Location in the array to place a scalar like total water
iisclr_thl = -2 ! Location in the array to place a scalar like thetal

sclr_tol  = 1.e-2, 1.e-8 ! Tolerances below which we consider scalar to be 0.

! Add scalars that are computed using simple eddy diffusivity
! 0 to shut off all scalar computations
! > 0 the specifies the number of columns in <runtype>_edsclr_sounding.in 
!	that will be read in and tracked
edsclr_dim  = 0

iiedsclr_rt     = -1 ! Location in the edsclrm array to place total water
iiedsclr_thl    = -2 ! Location in the edsclrm array to place a scalar like thetal

/

&microphysics_setting
! The schemes are: "khairoutdinov_kogan", "morrison", "coamps", "simplified_ice", "none"  
micro_scheme = "khairoutdinov_kogan"
!micro_scheme = "none"

/

&radiation_setting
rad_scheme = "bugsrad"
l_fix_cos_solar_zen = .true.
amu0                = 0.606
slr                 = 0.590
sol_const           = 1367.0 ! Solar Constant given in spec [W/m^2]
!rad_scheme = "none",
/

&stats_setting

! Statistics Settings

l_stats       = .true.   ! Flag for statistical output.
fname_prefix = "cloud_feedback_s12_p2k"    ! Prefix of output filename.
stats_tsamp  = 600.      ! Frequency of statistical sampling [s]
                        ! (must multiply evenly into stats_tout).
stats_tout   = 3600.      ! Frequency of statistical output.  [s]
stats_fmt    = "grads"  ! Type of statistical output file (GrADS or netCDF).
/
