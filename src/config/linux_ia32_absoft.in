# $Id$
# Configuration file for Linux machine using Absoft Fortran

# == Paths ==
# This is where the make command is going to put the resulting files
PREFIX = ..
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib

# == Compiler invocation ==
FC = af95 

# == Debugging ==
# It is sometimes helpful to turn on floating-point trapping for the 
#  standalone program, but this will not work when using the tuner.
#DEBUG = -g -trap=ALL -et
DEBUG = -g

# == Machine specific flags ==
# Note: some of these are 64 bit architectures, so make sure NetCDF is
# compiled accordingly.
ARCH = -m64 -cpu:opteron # Opterons

# == Optimization ==
OPTIMIZE = -O3

# == NetCDF Location ==
# Currently not working Absoft Fortran on Carson.  This is because I can't 
# find any flags that work with netCDF 3.6.2 and Absoft 10.  -dschanen 4 June 08
#NC_LOC = /usr/local/netcdf-absoft64

# === LAPACK libraries ==
#LAPACK = -L/usr/local/lib -llapack -lblas #  The netlib reference LAPACK/BLAS
#LAPACK = -L/usr/lib64 -llapack -L/usr/local/atlas/lib -lf77blas -lcblas -latlas # ATLAS BLAS (faster)
LAPACK = -L$(ACML_DIR)/gfortran64/lib -Wl,-rpath,$(ACML_DIR)/gfortran64/lib -lacml -lacml_mv -L/usr/lib64 -lgfortran

# == Linking Flags ==
# Use -s to strip (no debugging); 
# Use -L<library path> -l<lib> to link in an external library
# Use -Wl,-rpath <library path> to set a search path for shared libs
LDFLAGS = -lU77 -L$(LIBDIR) -Wl,-rpath,$(LIBDIR) -lclubb_param -lclubb_bugsrad $(LAPACK)

# == Compiler flags (all) ==
# Preprocessing Directives:
#   -DNETCDF enables netCDF output
#    enables COAMPS microphysics scheme
#    enables the tuning application
#   -Dradoffline and -Dnooverlap (see bugsrad documentation)
# You will need to `make clean' if you change these
# Use -I<include path> to set a module or header file directory

FCFLAGS = $(ARCH) $(DEBUG) -DAbsoftUNIXFortran   -Dnooverlap -Dradoffline
#FCFLAGS = $(ARCH) $(OPTIMIZE) -DAbsoftUNIXFortran   -Dnooverlap -Dradoffline

# == Static library processing ==
AR = ar
ARFLAGS = cru
RANLIB = ranlib

# == Shared library processing ==
SHARED = $(FC)
SHAREDFLAGS = -fPIC -shared
