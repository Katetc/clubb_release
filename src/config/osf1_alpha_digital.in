# $Id: osf1_alpha_digital.in,v 1.2 2008-06-04 20:28:16 dschanen Exp $
# Configuration File for HP/Compaq/DEC f95 on the UWM alpha

# == Paths ==
# This is where the make command is going to put the resulting files
PREFIX = ..
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib

# == Compiler invocation ==
FC = f95

# == Debugging ==
# It is sometimes helpful to turn on floating-point trapping for the 
#  standalone program, but this will not work when using the tuner.
# The usual options:
DEBUG = -g -check bounds -no_fp_reorder # Digital f95


# ==  Machine specific options ==
ARCH = -arch host

# == Optimization ==
# Sun's f95 has great difficulty with statistics.F
# For SS11, either turn off optimization for that file or expect a long 
#  compilation.  SS10 appears to fail altogether.
# These are all pretty conservative options, check the your compiler manual 
# for information on using more aggressive techniques (inlining, etc.)
OPTIMIZE = -O2

# == NetCDF Flags ==
NC_LOC=$(HOME)/netcdf-3.6.1/

# == LAPACK libraries ==
LAPACK = -L/usr/lib -lcxml -L/usr/ccs/lib/cmplrs/cc -lexc

# == Linking Flags ==
# Use -s to strip (no debugging); 
# Use -L<library path> -l<lib> to link in an external library
LDFLAGS = -L$(LIBDIR) -Wl,-rpath,$(LIBDIR) -lhoc_param -lhoc_bugsrad -L$(NC_LOC)/lib -lnetcdf $(LAPACK)

# == Compiler flags (all) ==
# Preprocessing:
#   -DSTATS enables statistics
#   -DSCALARS enables passive scalars
#   -DBIG_ENDIAN_IO use only if compiler performs big endian file i/O
#                   regardless of internal representation
#   -DLITTLE_ENDIAN_IO use only if compiler performs little endian file i/O
#                   regardless of internal representation
#   -Dradoffline and -Dnooverlap (see bugsrad documentation)
# You will need to `make clean' if you change these

FCFLAGS = $(ARCH) $(OPTIMIZE) -DSTATS -DNETCDF -Dnooverlap -Dradoffline -I$(NC_LOC)/include
#FCFLAGS = $(ARCH) $(DEBUG) -DSTATS -DNETCDF -Dnooverlap -Dradoffline -I$(NC_LOC)/include

# == Static library processing ==
AR = ar
ARFLAGS = cru
RANLIB = ranlib

# == Shared library processing ==
SHARED = ld
SHAREDFLAGS = -shared -KPIC
