# $Id: config.solaris_generic_ss11.in,v 1.9 2007-03-17 19:03:17 dschanen Exp $
# Makefile definitions for Sun Studio's Fortran compiler

# == Paths ==
# This is where the make command is going to put the resulting files
PREFIX = ..
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib

# == Compiler invocation ==
FC = f95 # Sun Fortran 8.2

# == Debugging ==
# It is sometimes helpful to turn on floating-point trapping for the 
#  standalone program, but this will not work when using the tuner.
# In Sun f95: remove the reference to ftrap, or use -ftrap=common
DEBUG = -g -C -fns=no -ftrap=%none

# == Machine specific flags ==
# The 2nd line is specific to ketley.math.uwm.edu
ARCH = -xarch=native -xcache=native -xchip=native -dalign
#ARCH = -xarch=amd64a -xcache=native -xchip=opteron -dalign

# == Optimization ==
# Sun's f95 has great difficulty with statistics.F
# Either turn off optimization for that file or expect a long compilation. 
# Using -xtypemap it is possible to compile for quad precision floating 
# point on SPARC, but on AMD64/EMT64 this is still not implemented.
# These are all pretty conservative options, check the your compiler manual 
# for information on using more aggressive techniques (inlining, etc.)
# -KPIC is needed for shared libs
# These options are good on a SPARC and AMD64 machine
OPTIMIZE = -g -xipo=2 -xO4 -xvector=lib -ftrap=%none
# These options are good for parallel tuning on ketley or OpenMP WRF-HOC.
#OPTIMIZE = -g -xopenmp -xparallel -stackvar -xipo=2 -xvector=simd -xO4 -ftrap=%none

# == Compiler flags (all) ==
# Preprocessing:
#   -DSTATS enables statistics
#   -DSCALARS enables passive scalars
#   -DBIG_ENDIAN_IO use only if compiler performs big endian file i/O
#                   regardless of internal representation
#   -DLITTLE_ENDIAN_IO use only if compiler performs little endian file i/O
#                   regardless of internal representation
# Note that natively SPARC is big endian and AMD64/IA32 are little endian.
#   -Dradoffline and -Dnooverlap (see bugsrad documentation)
# You will need to `make clean' if you change these
FCFLAGS = $(DEBUG) $(ARCH) -DSTATS -Dnooverlap -Dradoffline -M$(NC_LOC)/include
#FCFLAGS = $(OPTIMIZE) $(ARCH) -DSTATS -Dnooverlap -Dradoffline -M$(NC_LOC)/include
#FCFLAGS = $(DEBUG) $(ARCH) -DSTATS -DSCALARS -Dnooverlap -Dradoffline -M$(NC_LOC)/include


# == NetCDF Location  ==
NC_LOC = /usr/local/netcdf-sun32 # 32 bit libraries
#NC_LOC = /usr/local/netcdf-sun64 # 64 bit libraries

# == LAPACK libraries ==
LAPACK = -xlic_lib=sunperf

# == Linking Flags ==
# Use -s to strip (no debugging); 
# -Bstatic; for static linking of libraries
# -xlibmopt; link the optimized version of libm (this can affect results)
LDFLAGS = -L$(LIBDIR) -R$(LIBDIR) -lhoc_param -lhoc_bugsrad -L$(NC_LOC)/lib -lnetcdf -xlibmopt $(LAPACK)

# == Static library processing ==
AR = ar
ARFLAGS = cru
RANLIB = ranlib

# == Shared library processing ==
SHARED = $(FC)
SHAREDFLAGS = -G
