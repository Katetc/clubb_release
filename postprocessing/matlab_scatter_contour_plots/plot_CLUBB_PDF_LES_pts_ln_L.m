% $Id$
function plot_CLUBB_PDF_LES_pts_ln_L( var_x_LES, ...
                                      nx_LES_grid, ny_LES_grid, ...
                                      num_lnx_pts, lnx_abs_min, ...
                                      num_clubb_files, ...
                                      clubb_linecolor, clubb_linestyle, ...
                                      clubb_linewidth, legend_text, ...
                                      mu_x_1_n, mu_x_2_n, ...
                                      sigma_x_1_n, sigma_x_2_n, ...
                                      precip_frac_1, precip_frac_2, ...
                                      mixt_frac, var_lnx_label, ...
                                      case_name, field_plotted, ...
                                      time_plotted, ...
                                      altitude_plotted, ...
                                      note, use_long_title, ...
                                      long_field_name )
                                
% Path to PDF analysis functions.
addpath ( '../../utilities/PDF_analysis', '-end' )

scr_size= get(0,'ScreenSize');
fig_height = 0.9*scr_size(4);
fig_width  = fig_height;
figure('Position',[ 0 0 fig_width fig_height ])

subplot( 'Position', [ 0.13 0.15 0.82 0.75 ] )

% Histogram and marginal for ln x, where x > 0 (in-precip), a variable
% that is distributed normally in each PDF component.
pos_count_lnx = 0;
% The variable var_lnx_LES_pos contains only ln x, where x > 0 results
% from the LES.
for i = 1:1:nx_LES_grid*ny_LES_grid
   if ( var_x_LES(i) > 0.0 )
      pos_count_lnx = pos_count_lnx + 1;
      var_lnx_LES_pos(pos_count_lnx) = log( var_x_LES(i) );
   end
end
precip_frac_x_LES = pos_count_lnx / ( nx_LES_grid * ny_LES_grid );
for clubb_idx = 1:1:num_clubb_files
   precip_frac_clubb(clubb_idx) ...
   = mixt_frac(clubb_idx) * precip_frac_1(clubb_idx) ...
     + ( 1.0 - mixt_frac(clubb_idx) ) * precip_frac_2(clubb_idx);
end % clubb_idx = 1:1:num_clubb_files
min_lnx = max( min( var_lnx_LES_pos ), lnx_abs_min );
max_lnx = max( var_lnx_LES_pos );
num_lnx_divs = num_lnx_pts + 1;
delta_lnx = ( max_lnx - min_lnx ) / num_lnx_pts;
lnx_divs = zeros( num_lnx_divs, 1 );
lnx = zeros( num_lnx_pts, 1 );
P_lnx = zeros( num_clubb_files, num_lnx_pts );
% Calculate the ln x "division points" (edges of the bins).
for i = 1:1:num_lnx_divs
   lnx_divs(i) = min_lnx + delta_lnx * ( i - 1 );
end
% Calculate the ln x points (center of each bin).
for i = 1:1:num_lnx_pts
   lnx(i) = 0.5 * ( lnx_divs(i) + lnx_divs(i+1) );
end
% CLUBB's in-precip PDF marginal for ln x.
for clubb_idx = 1:1:num_clubb_files
   for i = 1:1:num_lnx_pts
      P_lnx(clubb_idx,i) ...
      = mixt_frac(clubb_idx) ...
        * ( precip_frac_1(clubb_idx) ...
            / max( precip_frac_clubb(clubb_idx), eps(1.0) ) ) ...
        * PDF_comp_Normal( lnx(i), mu_x_1_n(clubb_idx), ...
                           sigma_x_1_n(clubb_idx) ) ...
        + ( 1.0 - mixt_frac(clubb_idx) ) ...
          * ( precip_frac_2(clubb_idx) ...
              / max( precip_frac_clubb(clubb_idx), eps(1.0) ) ) ...
          * PDF_comp_Normal( lnx(i), mu_x_2_n(clubb_idx), ...
                             sigma_x_2_n(clubb_idx) );
   end
end % clubb_idx = 1:1:num_clubb_files
% Centerpoints and counts for each bin (from LES results) for ln x.
binranges_lnx = lnx;
[bincounts_lnx] = histc( var_lnx_LES_pos, binranges_lnx );
% Plot normalized histogram of LES results for ln x.
bar( binranges_lnx, ...
     bincounts_lnx ...
     / ( nx_LES_grid * ny_LES_grid * delta_lnx * precip_frac_x_LES ), ...
     1.0, 'r', 'EdgeColor', 'r' );
% Plot normalized PDF of x for CLUBB.
for clubb_idx = 1:1:num_clubb_files
   hold on
   plot( lnx, P_lnx(clubb_idx,:), ...
         'Color', clubb_linecolor(clubb_idx), ...
         'LineStyle', clubb_linestyle(clubb_idx,:), ...
         'LineWidth', clubb_linewidth(clubb_idx) )
end % clubb_idx = 1:1:num_clubb_files
hold off
% Set the range of the plot on both the x-axis and y-axis.
xlim( [ min_lnx max_lnx ] )
ylim( [ 0 max( max(bincounts_lnx) ...
               / ( nx_LES_grid * ny_LES_grid ...
                   * delta_lnx * precip_frac_x_LES ), ...
               max(max(P_lnx)) ) ] );
% Resize tick labels.
set( gca, 'FontSize', 16 );
% X-axis label.
hx = xlabel( var_lnx_label, 'FontSize', 20 );
% Relocate x-axis label.
set( hx, 'Units', 'Normalized' );
set( hx, 'Position', get(hx,'Position')-[0.0,0.02,0] );
% Y-axis label.
ylabel( [ '\itP( ', field_plotted, ' )\rm|_{ ip}' ], 'FontSize', 20 );
% Legend.
hleg = legend( legend_text(1:1+num_clubb_files,:), ...
               'Location', 'NorthWest' );
set( hleg, 'FontSize', 18 );
grid on
box on

% Figure title and other important information.
if ( use_long_title )
   title( [ case_name, ': ', long_field_name ], 'FontSize', 20 );
elseif ( strcmp( note, '' ) )
   title( [ case_name, '; ', field_plotted, '; ',  time_plotted, '; ', ...
            altitude_plotted ], 'FontSize', 20 );
else
   title( [ case_name, '; ', field_plotted, '; ',  time_plotted, '; ', ...
            altitude_plotted, '; ', note ], 'FontSize', 20 );
end
