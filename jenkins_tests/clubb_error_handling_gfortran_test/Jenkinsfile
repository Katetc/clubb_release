\pipeline {
  agent any
  stages {
    stage('Run test_fatal_error_handling') {
      steps {
        dir('run_scripts') {
          sh './test_fatal_error_handling.bash'
        }
      }
    }
    stage('Check for wp2 NaN error from advance_wp2_wp3') {
      steps {
        sh '''grep 'Error calling advance_wp2_wp3' run_scripts/advance_wp2_wp3_bad_wp2'''
      }
    }
    stage('Check for wp2 NaN error from advance_wm_wpxp') {
      steps {
        sh '''grep 'Error calling advance_xm_wpxp' run_scripts/advance_xm_wpxp_bad_wp2'''
      }
    }
  }
  post {
    always {
      script {
      if ( "${env.JOB_NAME}" == "clubb_error_handling_gfortran_test" )
      	cleanWs(cleanWhenSuccess: true, cleanWhenFailure: true)
      }
    }
    failure {
      script {
      if ( "${env.JOB_NAME}" ==	"clubb_error_handling_gfortran_test" )
      	emailext(to: 'messnermet@uwm.edu', subject: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has Failed", attachLog: true, body: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has failed. See the attached build log and the build results (${env.BUILD_URL}) for help troubleshooting.")
      }
    }
  }
}
