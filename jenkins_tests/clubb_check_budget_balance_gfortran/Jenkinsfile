pipeline {
  agent any
  stages {
    stage('Compile') {
      steps {
        sh '''source /etc/profile.d/larson-group.sh
              module load gcc netcdf-fortran
              compile/compile.bash'''
        sh 'git clone https://github.com/larson-group/sys_admin.git'
        //checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'sys_admin']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'Generic_Key', url: 'https://github.com/larson-group/sys_admin']]])
      }
    }
    stage('Run check_budget_balance') {
      steps {
        sh '''source /etc/profile.d/larson-group.sh
              module load gcc netcdf-fortran
              sys_admin/bitten_test_driver_scripts/check_budget_balance.bash .'''
      }
    }
  }
  post {
    always {
      script {
      if ( "${env.JOB_NAME}" == "clubb_check_budget_balance_gfortran" )
      	cleanWs(cleanWhenSuccess: true, cleanWhenFailure: true)
      }
    }
    failure {
      script {
      if ( "${env.JOB_NAME}" ==	"clubb_check_budget_balance_gfortran" )
      	emailext(to: 'messnermet@uwm.edu', subject: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has Failed", attachLog: true, body: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has failed. See the attached build log and the build results (${env.BUILD_URL}) for help troubleshooting.")
      }
    }
  }
}
