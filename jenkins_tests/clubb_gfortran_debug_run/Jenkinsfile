pipeline {
  agent any
  stages {
    stage('Compile') {
      steps {
        sh '''source /etc/profile.d/larson-group.sh
              module load gcc netcdf-fortran
              compile/compile.bash -c config/linux_x86_64_gfortran_debug.bash'''
      }
    }
    stage('Run') {
      steps {
        sh '''source /etc/profile.d/larson-group.sh
              module load gcc netcdf-fortran
              run_scripts/run_scm_all.bash'''
      }
    }
  }
  post {
    always {
      // Certain logical functions like IF statements or TRY-CATCH blocks can only operate while in a script{} block
      script {
      // This cleans out the test workspace so the next run has a fresh start
      // However this only occurs when the test is named clubb_gfortran_build
      // This is to prevent the branch and copy tests from deleting thier workspaces so they are available for debugging
      if ( "${env.JOB_NAME}" == "clubb_gfortran_debug_run" )
      	cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenSuccess: true, cleanWhenUnstable: true)
      }
    }
    failure {
      script {
      if ( "${env.JOB_NAME}" == "clubb_gfortran_debug_run" )
        // This command handles the email on failure feature of the jenkins test. This line is the same on every jenkins test.
      	emailext(to: 'messnermet@uwm.edu', subject: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has Failed", attachLog: true, body: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has failed. See the attached build log and the build results (${env.BUILD_URL}) for help troubleshooting.")
      }
    }
  }
}
